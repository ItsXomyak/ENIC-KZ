version: '3.8'

services:
  ticket-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/ticket_service?sslmode=disable
      - JWT_SECRET=your-secret-key-change-in-production
      - S3_BUCKET=your-bucket-name
      - PORT=8080
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-east-1}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ticket-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ticket_service
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - ticket-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    command: postgres -c 'max_connections=1000'

volumes:
  postgres_data:

networks:
  ticket-network:
    driver: bridge
