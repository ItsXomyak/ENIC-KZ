services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '${SERVER_PORT}:${SERVER_PORT}'
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - SERVER_SHUTDOWN_TIMEOUT=${SERVER_SHUTDOWN_TIMEOUT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SSLMODE=${DB_SSLMODE}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - S3_REGION=${S3_REGION}
      - S3_USE_SSL=${S3_USE_SSL}
      - CLAMAV_HOST=${CLAMAV_HOST}
      - CLAMAV_PORT=${CLAMAV_PORT}
      - CLAMAV_TIMEOUT=${CLAMAV_TIMEOUT}
      - JWT_SECRET=${JWT_SECRET}
      - LOG_LEVEL=${LOG_LEVEL}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_started
      clamav:
        condition: service_started
    networks:
      - ticket-network

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '${DB_PORT}:${DB_PORT}'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ticket-network

  redis:
    image: redis:7-alpine
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ticket-network

  minio:
    image: minio/minio
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - ticket-network

  clamav:
    image: clamav/clamav:latest
    ports:
      - '3310:3310'
    volumes:
      - clamav_data:/var/lib/clamav
    environment:
      - CLAMD_HOST=0.0.0.0
      - CLAMD_PORT=3310
    command: ['clamd']
    networks:
      - ticket-network

  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      migrate -path ./migrations
      -database "postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=${DB_SSLMODE}"
      up
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SSLMODE=${DB_SSLMODE}
    networks:
      - ticket-network

volumes:
  postgres_data:
  redis_data:
  minio_data:
  clamav_data:

networks:
  ticket-network:
    driver: bridge
